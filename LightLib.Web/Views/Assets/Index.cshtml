@using LightLib.Models
@model LightLib.Web.Models.Catalog.AssetIndexModel

@functions  
{
    private string GetIconForType(AssetType? assetType) {
        if (assetType == AssetType.Book) {
            return "book";
        }

        if (assetType == AssetType.Periodical) {
            return "newspaper";
        }
        
        if (assetType == AssetType.DVD) {
            return "play-btn-fill";
        }

        if (assetType == AssetType.AudioCD) {
            
            return "music-note";
        }
        
        if (assetType == AssetType.AudioBook) {
            
            return "headphones";
        }

        return "patch-question-fill";
    }
} 

@{
    ViewBag.Title = "Library Assets";
}

<h2 class="lms-section-heading">
    Library Assets 
</h2>

<div class="row">
    <section>
        <p>
            <strong>Assets</strong> make up the collection of all resources a library can loan across all branches.
        </p> 
        <p>
            Use this page to add, update, or remove Assets, see checkout queues, and mark items as lost or found.
        </p>
    </section>
</div>

<div class="row">
    <div class="col-12">
        <button class="btn btn-primary btn-sm">
            Add New Asset 
        </button>
    </div>
</div>

<hr />

<div class="row">
    <div class="container container-fluid">
        <nav aria-label="Asset Table Navigation Top">
          <ul class="pagination justify-content-end">
            <li class="page-item small"><a class="page-link" href="#">Previous</a></li>
            <li class="page-item small"><a class="page-link" href="#">Next</a></li>
          </ul>
        </nav>
        <table class="table table-sm table-responsive-sm">
            <thead class="thead-dark">
            <tr>
                <th scope="col">Asset Type</th>
                <th scope="col">Author / Creator</th>
                <th scope="col">Title</th>
                <th scope="col">Status</th>
                <th scope="col">Location</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var asset in Model.PageOfAssets.Results) {
                <tr>
                    <th scope="row">
                        <i class="bi bi-@GetIconForType(asset.ViewAssetType)"></i>
                    </th>
                    <td>
                        @asset.ViewAuthor
                    </td>
                    <td>
                        @asset.ViewTitle
                    </td>
                    <td>
                        @asset.AvailabilityStatus.Name
                    </td>
                    <td>
                        @asset.Location.Name
                    </td>
                </tr>
            }
            </tbody>
        </table>
        <nav aria-label="Asset Table Navigation Bottom">
          @{
              var previousPage = (Model.PageOfAssets.PageNumber - 1);
              var nextPage = (Model.PageOfAssets.PageNumber + 1);
              var prevDisabled = !Model.PageOfAssets.HasPreviousPage ? "disabled" : "";
              var nextDisabled = !Model.PageOfAssets.HasNextPage ? "disabled" : "";
          }
          <ul class="pagination justify-content-end">
              <li class="page-item small">
                  @Html.ActionLink("Previous", "Index", "Assets", new { page = previousPage }, new { @class="page-link" })
              </li>
              <li class="page-item small">
                  @Html.ActionLink("Next", "Index", "Assets", new { page = nextPage }, new { @class="page-link" })
              </li>
          </ul>
        </nav>
    </div>
</div>


